name: Build

on:
  push:
    paths:
      - "crates/*"
      - "Cargo.*"
      - ".github/workflows/build.yml"
    branches:
      - master
      - dev

jobs:
  build-macos:
    name: Build for macos
    runs-on: macos-11

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2.1.6
        id: cargo-cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install rust target
        run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin

      - name: Build x86-64
        run: cargo build --release --target=x86_64-apple-darwin

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-x86_64
          path: crates/native/index.node

      - name: Build aarch64
        run: cargo build --release --target=aarch64-apple-darwin

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-aarch64
          path: crates/native/index.node

  build-linux:
    name: Build for linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Installing needed Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev
          # sudo apt-get install -y libx11-dev

      - uses: actions/cache@v2.1.6
        id: cargo-cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install rust target
        run: |
          rustup target add x86_64-unknown-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
          rustup target add armv7-unknown-linux-gnueabihf

      - name: Build x86-64
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-x86_64
          path: crates/native/index.node

      - name: Build image
        run: |
          docker build -t cross/aarch64:v1 -f docker/Dockerfile.aarch64-unknown-linux-gnu .
          docker build -t cross/armv7:v1 -f docker/Dockerfile.armv7-unknown-linux-gnueabihf .

      - name: Build aarch64
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: true
          args: --release --target aarch64-unknown-linux-gnu

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-aarch64
          path: crates/native/index.node

      - name: Build armv7
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: true
          args: --release --target armv7-unknown-linux-gnueabihf

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-armv7
          path: crates/native/index.node

  build-windows:
    name: Build for windows
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1.5.0
        with:
          version: "11"
          directory: ${{ runner.temp }}/llvm

      - uses: actions/cache@v2.1.6
        id: cargo-cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install rust target
        run: |
          rustup target add x86_64-pc-windows-msvc
          rustup target add aarch64-pc-windows-msvc

      - name: Build x86-64
        run: cargo build --release --target x86_64-pc-windows-msvc
        env:
          LIBCLANG_PATH: ${{ runner.temp }}/llvm/bin

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-x86_64
          path: crates/native/index.node

      - name: Build aarch64
        run: cargo build --release --target aarch64-pc-windows-msvc
        env:
          LIBCLANG_PATH: ${{ runner.temp }}/llvm/bin

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-aarch64
          path: crates/native/index.node
